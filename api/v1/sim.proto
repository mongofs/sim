syntax = "proto3";

package im.basic;
option go_package = "grpc";

message Empty{}

// ==========================SendMsg ================/

message load{
  // 1. load is too high
  // 2. user is not online
  map<string, string> token = 1 ; // token : err,
}

message SendMsgReq {
  repeated string token = 1;
  bytes data = 2;
}


message SendMsgResp{
  string msgID = 1;
  load filed = 2;
  repeated  string success = 3;
}

// ===================================================



message OnlineReply{
  int64 number = 1 ;
}

message BroadcastReq{
  bytes data = 1;
}

message BroadcastReply{
  repeated  string fail = 1 ;
}


message PushToClient{
  int64 sid = 1 ;
  bytes msg = 2 ;
}







message Info{
  map<string, string> Info = 1 ;
}

// ============================ WTITargetList ======================

message WTITargetListReq {
  int32  limit = 1;
  int32  page = 2 ;
}

message WTITargetListInfoReply {
  int32  count = 1; // 总的target 数量
  repeated  Info info = 2 ; //target info
}

// ============================ WTITargetInfo ======================


message WTITargetInfoReq {
  string tag = 1 ;
}

message WTITargetInfoReply {
  string tag = 1 ;
  int32  online = 2 ;
  int32  limit = 3;
  int64  create_time = 4 ;
  int32  status = 5 ;
  int32  numG = 6;
  repeated  Info gInfos = 7;
}


// ============================ WTIBroadcastByTarget ======================

// target1 ,content1
// target2 ,content2
message WTIBroadcastReq{
  map<string, bytes> data = 1;
}

message WTIBroadcastReply {
  repeated string failed = 1 ;
}

// ===================WTIBroadCastWithInnerJoinTag ======================



message WtiBroadcastWithInnerJoinReq {
  bytes  data = 1 ;
  repeated  string tags = 2;
}

message WtiBroadcastWithInnerJoinReply{

}

service Basic {
  // Ping Service
  rpc Ping(Empty) returns(Empty);
  rpc Online(Empty)returns (OnlineReply);
  rpc SendMsg(SendMsgReq) returns (SendMsgResp);
  rpc Broadcast(BroadcastReq) returns (BroadcastReply);

  // wti server
  rpc WTITargetList (WTITargetListReq) returns (WTITargetListInfoReply);
  rpc WTITargetInfo (WTITargetInfoReq) returns (WTITargetInfoReply);
  rpc WTIBroadcast (WTIBroadcastReq) returns (BroadcastReply);
  rpc WTIBroadCastWithInnerJoinTag(WtiBroadcastWithInnerJoinReq) returns (BroadcastReply);
}